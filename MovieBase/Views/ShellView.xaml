<mah:MetroWindow
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="MovieBase.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i ="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MovieBase"
        xmlns:viewModels ="clr-namespace:MovieBase.ViewModels"
    xmlns:conv="clr-namespace:MovieBase.Converters"
    xmlns:views="clr-namespace:MovieBase.Views"
    mc:Ignorable="d"
        Title="MovieBase" Height="600" Width="700" IconEdgeMode="Unspecified" ShowIconOnTitleBar="False"
                      GlowBrush="{DynamicResource AccentColorBrush}" SnapsToDevicePixels="True" TitlebarHeight="32" ShowDialogsOverTitleBar="False" TitleAlignment="Center" IconBitmapScalingMode="NearestNeighbor"  MinWidth="700" MinHeight="600">
    <mah:MetroWindow.Resources>
        <conv:ZeroToNullConverter x:Key="ZeroToNullConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl />
    </mah:MetroWindow.Flyouts>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button x:Name="GoBackButton"
                    Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
                    Click="GoBack_OnClick">
                <i:PackIconMaterial Kind="ArrowLeft" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding GoBackCommand}" />
    </Window.InputBindings>
    <Window.DataContext>
        <viewModels:ShellViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.Resources>

            <!--  these are the templates for the view models -->
            <!--
            <DataTemplate DataType="{x:Type viewModels:HomeViewModel}">
                <views:HomeView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:CollectionViewModel}">
                <views:CollectionView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:SettingsViewModel}">
                <views:SettingsView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:AboutViewModel}">
                <views:AboutView DataContext="{Binding}" />
            </DataTemplate>-->

            <!--<conv:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />-->

            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type viewModels:MenuItem}">
                <Grid x:Name="RootGrid"
                      Height="32"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    Foreground="White" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Foreground="White"
                               Text="{Binding Text}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=IsPaneOpen}" Value="False">
                        <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Grid.Resources>

        <!--<Image Margin="-989,-268,0,0" Source="dsfsd.png" Stretch="Fill" HorizontalAlignment="Left" Width="898" Height="713" VerticalAlignment="Top"  />-->

        <mah:HamburgerMenu x:Name="HamburgerMenuControl"
                                DisplayMode="CompactOverlay"
                                Foreground="White"
                                IsPaneOpen="False"
                                ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                ItemsSource="{Binding Menu}"
                                OptionsItemsSource="{Binding OptionsMenu}"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                OptionsItemTemplate="{StaticResource MenuItemTemplate}" CompactPaneLength="32" HamburgerHeight="32" HamburgerWidth="32" HamburgerMargin="2">

            <!--  Content template  -->
            <mah:HamburgerMenu.ContentTemplate>
                <DataTemplate>
                    <Grid x:Name="TheContentGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentControl x:Name="TheContent"
                                        Grid.Row="1"
                                        Content="{Binding Content}"
                                        Focusable="False"
                                        Foreground="{DynamicResource BlackBrush}" />
                    </Grid>
                </DataTemplate>
            </mah:HamburgerMenu.ContentTemplate>
        </mah:HamburgerMenu>

        <!--<Image Margin="-989,-268,0,0" Source="dsfsd.png" Stretch="Fill" HorizontalAlignment="Left" Width="898" Height="713" VerticalAlignment="Top"  />-->

        <Border Grid.Row="0" Background="#FFE2E2E2" Height="32" VerticalAlignment="Top" Margin="32,0,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="108" />
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="Header"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontSize="18"
                                       Foreground="#FF0D6822"
                                       Text="MOVIEBASE" Margin="8,0,0,0" FontFamily="Arial" />
                <Grid Grid.Column="1"  Background="Green">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <mah:Badged  Grid.Column="0" Badge="{Binding NotificationCollection.Count, Converter={StaticResource ZeroToNullConverter}, Mode=OneWay}" BadgePlacementMode="TopLeft" Margin="0">
                        <Button  Command="{Binding NavigateCommand}" CommandParameter="Views/HomeView.xaml">
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Clear Notification" Command="{Binding ClearNotificationCommand}" />
                                </ContextMenu>
                            </Button.ContextMenu>

                            <i:Material Kind="Bell" />
                        </Button>
                </mah:Badged>
                    <mah:Badged  Grid.Column="1"  Badge="{Binding UnsyncedCollection.Count, Converter={StaticResource ZeroToNullConverter}, Mode=OneWay}" BadgePlacementMode="TopLeft">
                        <Button Command="{Binding NavigateCommand}" CommandParameter="Views/SynchronizeView.xaml" Content="{i:Material Sync}" />
                    </mah:Badged>
                    <mah:Badged   Grid.Column="2"  BadgePlacementMode="TopLeft">
                        <Button  Command="{Binding NavigateCommand}" CommandParameter="Views/SettingsView.xaml" Content="{i:Material Account}" />
                    </mah:Badged>
                </Grid>
                <Grid HorizontalAlignment="Left" Width="208" Background="#FF444444" Visibility="{Binding IsPaneOpen, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=HamburgerMenuControl}">
                    <TextBlock x:Name="HeadDark"
                        FontSize="18"
                        Foreground="#FFD0D0D0"
                        Text="MOVIEBASE" FontFamily="Arial" Margin="8,6,2,5" />
                </Grid>
            </Grid>
        </Border>
    </Grid>
</mah:MetroWindow>